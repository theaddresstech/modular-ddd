<?php

declare(strict_types=1);

namespace {{ namespace }};

use LaravelModularDDD\CQRS\Contracts\QueryInterface;

/**
 * {{ class }}
 *
 * Query to {{ action }} {{ aggregate_lower }}(s).
 * Returns read model data for presentation layer.
 */
final class {{ class }} implements QueryInterface
{
    public function __construct(
        public readonly ?string $id = null,
        public readonly int $limit = 10,
        public readonly int $offset = 0,
    ) {
    }

    /**
     * Get query name for routing
     */
    public function getQueryName(): string
    {
        return '{{ module }}.{{ aggregate_lower }}.{{ action }}';
    }

    /**
     * Get query ID for tracking
     */
    public function getQueryId(): string
    {
        return uniqid('qry_', true);
    }

    /**
     * Get cache key
     */
    public function getCacheKey(): string
    {
        return '{{ module }}.{{ aggregate_lower }}.{{ action }}.' . md5(serialize($this));
    }

    /**
     * Get cache TTL in seconds
     */
    public function getCacheTtl(): int
    {
        return 300; // 5 minutes
    }

    /**
     * Get cache tags for invalidation
     */
    public function getCacheTags(): array
    {
        return ['{{ module }}', '{{ aggregate_lower }}'];
    }

    /**
     * Should use cache
     */
    public function shouldCache(): bool
    {
        return true;
    }

    /**
     * Get validation rules
     */
    public function rules(): array
    {
        return [
            'id' => 'nullable|string',
            'limit' => 'integer|min:1|max:100',
            'offset' => 'integer|min:0',
        ];
    }

    /**
     * Get query metadata
     */
    public function getMetadata(): array
    {
        return [
            'aggregate' => '{{ aggregate }}',
            'action' => '{{ action }}',
            'module' => '{{ module }}',
            'cacheable' => true,
            'paginated' => true,
        ];
    }

    /**
     * Get query timeout in seconds
     */
    public function getTimeout(): int
    {
        return 30;
    }
}