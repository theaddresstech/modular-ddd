<?php

declare(strict_types=1);

namespace {{ namespace }};

use LaravelModularDDD\CQRS\Contracts\CommandInterface;
use Modules\{{ module }}\Domain\ValueObjects\{{ aggregate }}Id;

/**
 * {{ class }}
 *
 * Command to {{ action }} a {{ aggregate_lower }}.
 * Contains all necessary data for the operation.
 */
final class {{ class }} implements CommandInterface
{
    public function __construct(
        public readonly {{ aggregate }}Id ${{ aggregate_lower }}Id,
        public readonly string $data = '',
    ) {
    }

    /**
     * Get command name for routing
     */
    public function getCommandName(): string
    {
        return '{{ module }}.{{ aggregate_lower }}.{{ action }}';
    }

    /**
     * Get command ID for tracking
     */
    public function getCommandId(): string
    {
        return uniqid('cmd_', true);
    }

    /**
     * Get validation rules
     */
    public function rules(): array
    {
        return [
            '{{ aggregate_lower }}_id' => 'required|string',
            'data' => 'nullable|string',
        ];
    }

    /**
     * Get command metadata
     */
    public function getMetadata(): array
    {
        return [
            'aggregate' => '{{ aggregate }}',
            'action' => '{{ action }}',
            'module' => '{{ module }}',
            'async' => false,
        ];
    }

    /**
     * Get command priority (lower number = higher priority)
     */
    public function getPriority(): int
    {
        return 50;
    }

    /**
     * Should retry on failure
     */
    public function shouldRetry(): bool
    {
        return '{{ action }}' !== 'delete';
    }

    /**
     * Maximum retry attempts
     */
    public function getMaxRetries(): int
    {
        return 3;
    }
}